/**
 * Instruction Format:
 * "HEAD R, IX, I, ADDR"
 * Example: STR 0, 1, 0, 0
 * Part of the content of certain instructions might be omitted with a symbol of '_'.
 * Example: AIR, 0, _, _, 1
 */

// start of variables
// M[8] = 1984

// initialize X[1] for variables
LIX _, 1, _, 0
1000110001000000
LDX _, 1, 0, 8
1000010001001000

// I/O control
LDA 0, 0, 0, 0
0000110000000000
STR 0, 0, 0, 7
0000100000000111

/**
 * Variable Definition:
 * (STR 0, 1, 0, 0, STR 0, 1, 0, 1) Float1 1.3
 * STR 0, 1, 0, 2 Float2 2.6 (0 1111111 00011010)
 * STR 0, 1, 0, 4 constant 127 (complement of -1 in 7-bit 2's)
 * (STR 0, 1, 0, 5, STR 0, 1, 0, 6) Vector1
 * (STR 0, 1, 0, 7, STR 0, 1, 0, 8) Vector2
 * (STR 0, 1, 0, 9, STR 0, 1, 0, 10) Float 2
 * STR 0, 1, 0, 11 addr(Vector1)
 * STR 0, 1, 0, 12 addr(Vector2)
 */

// construct constant -1
LDA 0, 0, 0, 1
0000110000000001
SRC 0, 1, 1, 7
0110010001100111
SIR 0, _, _, 1
0001110000000001
STR 0, 1, 0, 4
0000100001000100

// construct Float1 1.3
LDR 0, 1, 0, 4
0000010001000100
STR 0, 1, 0, 0
0000100001000000
LDA 0, 0, 0, 13
0000110000001101
STR 0, 1, 0, 1
0000100001000001

// construct Float2 2.6
LDR 0, 1, 0, 4
0000010001000100
SRC 0, 1, 1, 8
0110010001101000
AIR 0, _, _, 26
0001100000011010
STR 0, 1, 0, 2
0000100001000010

// test FADD/FSUB
LDFR 0, 1, 0, 0
1010000001000000
FADD 0, 1, 0, 2
0110110001000010
FSUB 0, 1, 0, 2
0111000001000010

// -----------------------------------------------------------------------------

// construct Vector1 (1, 2)
LDA 0, 0, 0, 1
0000110000000001
STR 0, 1, 0, 5
0000100001000101
LDA 0, 0, 0, 2
0000110000000010
STR 0, 1, 0, 6
0000100001000110

// construct Vector1 (3, 4)
LDA 0, 0, 0, 3
0000110000000011
STR 0, 1, 0, 7
0000100001000111
LDA 0, 0, 0, 4
0000110000000100
STR 0, 1, 0, 8
0000100001001000

// construct Float 2
LDA 0, 0, 0, 0
0000110000000000
STR 0, 1, 0, 9
0000100001001001
LDA 0, 0, 0, 2
0000110000000010
STR 0, 1, 0, 10
0000100001001010

// set addr(Vector1), addr(Vector2)
LDA 0, 1, 0, 5
0000110001000101
STR 0, 1, 0, 11
0000100001001011
LDA 0, 1, 0, 7
0000110001000111
STR 0, 1, 0, 12
0000100001001100

// test VADD/VSUB
LDFR 1, 1, 0, 9
1010000101001001
VADD 1, 1, 0, 11
0111010101001011
LDR 0, 1, 0, 5
0000010001000101
OUT 0, _, _, 1
1100100000000001
LDR 0, 1, 0, 6
0000010001000110
OUT 0, _, _, 1
1100100000000001
VSUB 1, 1, 0, 11
0111100101001011
LDR 0, 1, 0, 5
0000010001000101
OUT 0, _, _, 1
1100100000000001
LDR 0, 1, 0, 6
0000010001000110
OUT 0, _, _, 1
1100100000000001

// -----------------------------------------------------------------------------

// test CNVRT
    // convert 2.6 to 2
    LDA 1, 0, 0, 0
    0000110100000000
    CNVRT 1, 1, 0, 2
    0111110101000010
    // convert 2 to 2.0
    LDA 0, 0, 0, 1
    0000110000000001
    CNVRT 0, 1, 0, 10
    0111110001001010

// END OF PROGRAM
// (nothing here)
